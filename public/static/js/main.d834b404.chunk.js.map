{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","components/Spiner/Spinner.js","pages/Events.js","components/Bookings/BookingList/BookingList.js","pages/Booking.js","components/navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","isAdmin","login","tokenExpiration","logout","AuthPage","useState","isLogin","setIsLogin","setIsError","email","password","values","setValues","context","useContext","AuthContext","handleChange","e","target","name","value","className","onSubmit","preventDefault","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","catch","err","console","log","type","id","placeholder","onChange","onClick","Modal","props","title","children","canCancel","onCancel","canConfirm","onConfirm","buttonTitle","backdrop","eventItem","src","urlImage","alt","clasa","marca","numarKilometri","price","Date","date","toDateString","onDetail","bind","eventId","onDelete","eventList","events","map","event","_id","creatorId","creator","authUserId","onViewDetail","Spinner","EventPage","creating","setCreating","selectedEvent","setSelectedEvent","setEvents","isLoading","setIsLoading","numarInmatriculare","detaliiMarca","description","modalCancelHandler","useEffect","fetchEvents","fetchedEvents","Fragment","Authorization","htmlFor","rows","find","evt","BookingList","bookings","booking","createdAt","toLocaleDateString","BookingPage","setBookings","confirmBooking","setConfirmBooking","selectedBooking","setSelectedBooking","badUser","setBadUser","fetchBookings","fetchedBookings","addToBlackList","deleteBookingHandler","confirmHandler","bookingId","a","updatedBookings","filter","style","textAlign","user","MainNavigation","to","App","Provider","from","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d834b404.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\n\nexport default React.createContext({\n  token: null,\n  userId: null,\n  isAdmin :null,\n  login: (token, userId, tokenExpiration,isAdmin) => {},\n  logout: () => {},\n});\n","import React, { Component, useState, useContext } from \"react\";\nimport \"./Auth.scss\";\nimport AuthContext from \"../context/auth-context\";\n\nconst AuthPage = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const context = useContext(AuthContext);\n\n  const handleModeChange = () => {\n    setIsLogin(!isLogin);\n  };\n  \n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const email = values.email;\n    const password = values.password;\n\n    // if (email.trim().length === 0 || password.trim().length === 0) {\n    //   setIsError(true);\n    // }\n    let requestBody = {\n      query: `\n        query{\n          login(email :\"${email}\" , password :\"${password}\"){\n            userId \n            token\n            tokenExpiration\n           isAdmin\n            \n          }\n        }\n      `,\n    };\n    //different type of fetching\n    if (!isLogin) {\n      requestBody = {\n        query: `\n          mutation CreateUser($email:String!, $password:String!){ \n            createUser(userInput: {email :$email , password:$password }){\n              _id\n              email\n            }\n          }\n        `,\n        variables: {\n          email: email,\n          password: password,\n        },\n      };\n    }\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n          setIsError(true);\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.data.login.token) {\n          context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration,\n            resData.data.login.isAdmin\n          );\n          // context.token = resData.data.login.token;\n          // context.userId = resData.data.login.userId;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsError(true);\n      });\n  };\n  return (\n    <div className=\"container\">\n      {/* {isError ? (\n        <div class=\"alert alert-primary\" role=\"alert\">\n          This is a primary alert—check it out!\n        </div>\n      ) : ( */}\n      <div className=\"log-form\">\n        <form className=\"col-md-6 offset-md-3\" onSubmit={handleSubmit}>\n          <h2>{isLogin ? \"Please  Sign In\" : \"Please Sign Up\"}</h2>\n          <hr className=\"divisor\" />\n          <div className=\"form-control\">\n            {/* <label htmlFor=\"email\"> Email </label> */}\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={values.email}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-control\">\n            {/* <label htmlFor=\"password\"> Password </label> */}\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={values.password}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-actions\">\n            <button type=\"button\" className=\"btn\" onClick={handleModeChange}>\n              Switch to {isLogin ? \"Signup\" : \"Login\"}\n            </button>\n            <button type=\"submit\" className=\"btn\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default AuthPage;\n","import React from \"react\";\nimport \"./Modal.css\";\n\nconst Modal = (props) => (\n  <div className=\"modal\">\n    <header className=\"modal__header\">\n      <h1> {props.title} </h1>\n    </header>\n    <section className=\"modal__content\"> {props.children}</section>\n    <section className=\"modal__actions\">\n      {props.canCancel && (\n        <button className=\"btn\" onClick={props.onCancel}>\n          Cancel\n        </button>\n      )}\n      {props.canConfirm && (\n        <button className=\"btn\" onClick={props.onConfirm}>\n         {props.buttonTitle}\n        </button>\n      )}\n    </section>\n  </div>\n);\nexport default Modal;\n","import React from \"react\";\n\nimport \"./Backdrop.css\";\n\nconst backdrop = (props) => <div className=\"backdrop\"></div>;\n\nexport default backdrop;\n","import React from \"react\";\nimport \"./EventItem.css\";\n\nconst eventItem = (props) => (\n  <li key={props.eventId}>\n    <div className=\"card\">\n      <input type=\"checkbox\" className=\"input\" />\n      <div className=\"toggle\">+</div>\n      <div className=\"imgBx\">\n        <img id=\"img\" src={props.urlImage} alt={props.clasa} />\n      </div>\n      <div className=\"content\">\n        <h1>{props.marca}</h1>\n        <h2>Clasa : {props.clasa}</h2>\n        <h2>Numar Kilometri : {props.numarKilometri} km</h2>\n\n        <h2>\n          {/* Price/hour: ${props.price} - {new Date(props.date).toDateString()} */}\n          Price/hour: ${props.price}\n        </h2>\n        <h2>Marca : {props.marca}</h2>\n        <h2>Clasa: {props.clasa} </h2>\n        <h2>Date: {new Date(props.date).toDateString()} </h2>\n        {/* <h2>: {props.} </h2> */}\n        <div className=\"buttonsContainer\">\n          {/* {props.userId == props.creatorId ? (\n            <p>You're the owner of this event</p>\n          ) : ( */}\n          <button\n            className=\"btnn\"\n            onClick={props.onDetail.bind(this, props.eventId)}\n          >\n            View Details\n          </button>\n\n          {/* <button\n            className=\"btnn\"\n            // onClick={props.onEdit.bind(this, props.eventId)}\n            // style={{ backgroundColor: \"#01d1d1\", color: \"#f5e795\"}}\n          >\n            Edit\n          </button> */}\n          {props.isAdmin && (\n            <button\n              className=\"btnn\"\n              // style={{ backgroundColor: \"linear-gradient(to left, 01d1d1, #6dd5ed);\", color: \"#ff5f0f\" }}\n              // style={{ backgroundColor: \"#01d1d1\", color: \"#ff5f0f\" }}\n              onClick={props.onDelete.bind(this, props.eventId)}\n            >\n              Delete\n            </button>\n          )}\n\n          {/* )} */}\n        </div>\n      </div>\n    </div>\n  </li>\n);\n\nexport default eventItem;\n","import React from \"react\";\nimport \"./EventList.css\";\n\nimport EventItem from \"./EventItem/EventItem\";\n\nconst eventList = (props) => {\n  const events = props.events.map((event) => {\n    return (\n      <EventItem\n        className=\"event__item\"\n        key={event._id}\n        eventId={event._id}\n        marca={event.marca}\n        clasa={event.clasa}\n        numarKilometri={event.numarKilometri}\n        price={event.price}\n        date={event.date}\n        urlImage={event.urlImage}\n        creatorId={event.creator._id}\n        userId={props.authUserId}\n        onDetail={props.onViewDetail}\n        onDelete ={props.onDelete}\n        isAdmin={props.isAdmin}\n      />\n    );\n  });\n  return <ul className=\"event__list\">{events}</ul>;\n};\n\nexport default eventList;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-dual-ring\"></div>\n  </div>\n);\nexport default Spinner;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Modal from \"../components/Modal/Modal\";\nimport Backdrop from \"../components/Backdrop/Backdrop\";\nimport AuthContext from \"../context/auth-context\";\nimport \"./Events.css\";\nimport \"../components/Events/EventList/EventItem/EventItem.css\";\nimport EventList from \"../components/Events/EventList/EventList\";\nimport Spinner from \"../components/Spiner/Spinner\";\n\nconst EventPage = () => {\n  const [creating, setCreating] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState();\n  // const eventss = [];/\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [values, setValues] = useState({\n    numarInmatriculare: \"\",\n    numarKilometri: \"\",\n    date: \"\",\n    marca: \"\",\n    detaliiMarca: \"\",\n    clasa: \"\",\n    price: \"\",\n    urlImage: \"\",\n    description: \"\",\n  });\n  const context = useContext(AuthContext);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const createHandler = () => {\n    setCreating(true);\n  };\n\n  const modalConfirmHandler = () => {\n    setCreating(false);\n    // const title = values.title;\n    // //const price = parseFloat(values.price); // to convert in number\n    // const price = +values.price; // to convert in number\n    const numarInmatriculare = values.numarInmatriculare;\n    const numarKilometri = values.numarKilometri;\n    const date = values.date;\n    const marca = values.marca;\n    const detaliiMarca = values.detaliiMarca;\n    const clasa = values.clasa;\n    const price = values.price;\n    const urlImage = values.urlImage;\n    const description = values.description;\n\n    // if (\n    //   title.trim().length === 0 ||\n    //   price < 0 ||\n    //   date.trim().length === 0 ||\n    //   description.trim().length === 0\n    // ) {\n    //   return;\n    // }\n    // const event = { title : title, price: price, date: date, description };\n    const event = {\n      date,\n      description,\n      numarInmatriculare,\n      numarKilometri,\n      marca,\n      detaliiMarca,\n      clasa,\n      price,\n      urlImage,\n    };\n    const requestBody = {\n      query: `\n        mutation { \n          createEvent(eventInput: {\n            numarInmatriculare:\"${numarInmatriculare}\" ,\n            numarKilometri:\"${numarKilometri}\" ,\n            marca:\"${marca}\", \n            detaliiMarca:\"${detaliiMarca}\", \n            clasa:\"${clasa}\", \n            price:\"${price}\", \n            urlImage:\"${urlImage}\", \n            date:\"${date}\"\n            description:\"${description}\"\n            })\n          {\n            _id\n            date,\n            description,\n            numarInmatriculare,\n            numarKilometri,\n            marca,\n            detaliiMarca,\n            clasa,\n            price,\n            urlImage,\n            creator{\n              _id\n              email\n            }\n          }\n        }\n      `,\n    };\n    const token = context.token;\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        fetchEvents();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const modalCancelHandler = () => {\n    setCreating(false);\n    setSelectedEvent(null);\n  };\n\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n\n  const fetchEvents = () => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `\n      query { \n        events{\n          _id\n          date,\n          description,\n          numarInmatriculare,\n          numarKilometri,\n          marca,\n          detaliiMarca,\n          clasa,\n          price,\n          urlImage,\n          creator{\n            _id\n            email\n          }\n        }\n      }\n    `,\n    };\n    const token = context.token;\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        const fetchedEvents = resData.data.events;\n        setEvents(fetchedEvents);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  };\n\n  const showDetailHandler = (eventId) => {\n    setSelectedEvent(() => {\n      const selectedEvent = events.find((evt) => evt._id === eventId);\n      return setSelectedEvent(selectedEvent);\n    });\n  };\n\n  const bookEventHandler = () => {\n    if (!context.token) {\n      setSelectedEvent(null);\n      return;\n    }\n    const requestBody = {\n      query: `\n      mutation { \n        bookEvent(eventId : \"${selectedEvent._id}\"){\n          _id\n          createdAt\n          updatedAt\n        }\n      }\n    `,\n    };\n    const token = context.token;\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        console.log(resData);\n        setSelectedEvent(null);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  };\n  const deleteHandler = (eventId) => {\n    console.log(eventId);\n\n    const requestBody = {\n      query: `\n      mutation { \n        deleteEvent(eventId : \"${eventId}\"){\n          _id\n        }\n      }\n    `,\n    };\n    const token = context.token;\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        console.log(resData);\n        fetchEvents();\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      {(creating || selectedEvent) && <Backdrop />}\n      {creating && (\n        <Modal\n          buttonTitle=\"Confirm\"\n          title=\"Add Car\"\n          canCancel\n          canConfirm\n          onCancel={modalCancelHandler}\n          onConfirm={modalConfirmHandler}\n        >\n          <form>\n            <div className=\"form-control\">\n              <label htmlFor=\"numarInmatriculare\">Numar Inmatriculare</label>\n              <input\n                type=\"text\"\n                id=\"numarInmatriculare\"\n                name=\"numarInmatriculare\"\n                value={values.numarInmatriculare}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"numarKilometri\">Numar kilometri</label>\n              <input\n                type=\"number\"\n                id=\"numarKilometri\"\n                name=\"numarKilometri\"\n                value={values.numarKilometri}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"date\">Data Fabricatie</label>\n              <input\n                type=\"datetime-local\"\n                id=\"date\"\n                name=\"date\"\n                value={values.date}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"marca\">Marca</label>\n              <input\n                type=\"text\"\n                id=\"marca\"\n                name=\"marca\"\n                value={values.marca}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"detaliiMarca\">Detalii Marca</label>\n              <input\n                type=\"text\"\n                id=\"detaliiMarca\"\n                name=\"detaliiMarca\"\n                value={values.detaliiMarca}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"clasa\">Clasa</label>\n              <input\n                type=\"text\"\n                id=\"clasa\"\n                name=\"clasa\"\n                value={values.clasa}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"price\">Pret/ora</label>\n              <input\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                value={values.price}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-control\">\n              <label htmlFor=\"urlImage\">Url-Image</label>\n              <input\n                type=\"text\"\n                id=\"urlImage\"\n                name=\"urlImage\"\n                value={values.urlImage}\n                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                type=\"text\"\n                id=\"description\"\n                rows=\"4\"\n                name=\"description\"\n                value={values.description}\n                onChange={handleChange}\n              />\n            </div>\n          </form>\n        </Modal>\n      )}\n      {selectedEvent && (\n        <Modal\n          buttonTitle={context.token ? \"Book\" : \"Confirm\"}\n          title={selectedEvent.marca}\n          canCancel\n          canConfirm\n          onCancel={modalCancelHandler}\n          onConfirm={bookEventHandler}\n        >\n          {/* <h1>{selectedEvent.clasa}</h1>\n          <h2>${selectedEvent.price}</h2>\n          <h2>{new Date(selectedEvent.date).toDateString()}</h2>\n          <p>{selectedEvent.description}</p> */}\n          <div>\n            <h1>Marca :{selectedEvent.marca}</h1>\n\n            <h2>Clasa : {selectedEvent.clasa}</h2>\n\n            <h2>Numar Inmatriculare : {selectedEvent.numarInmatriculare}</h2>\n            <h2>Detalii Marca : {selectedEvent.detaliiMarca}</h2>\n\n            <h2>Numar Kilometri : {selectedEvent.numarKilometri} km</h2>\n            <h2>\n              Data fabricatie:\n              <i>{new Date(selectedEvent.date).toDateString()}</i>{\" \"}\n            </h2>\n            <h2>\n              {/* Price/hour: ${props.price} - {new Date(props.date).toDateString()} */}\n              Price/hour: ${selectedEvent.price} /h\n            </h2>\n            <h2>description : {selectedEvent.description}</h2>\n          </div>\n        </Modal>\n      )}\n\n      {context.isAdmin === \"true\" && context.token ? (\n        <div className=\"events-controls\">\n          <p>Share new cars!!</p>\n          <button className=\"btn\" onClick={createHandler}>\n            Add a new car\n          </button>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <EventList\n          events={events}\n          authUserId={context.userId}\n          onViewDetail={showDetailHandler}\n          onDelete={deleteHandler}\n          isAdmin={context.isAdmin}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default EventPage;\n","import React from \"react\";\nimport \"./BookingList.css\";\nimport \"../../Events/EventList/EventList.css\";\n\nconst BookingList = (props) => (\n  <ul className=\"bookings__list\">\n    {props.bookings.map((booking) => {\n      return (\n        <li key={booking._id} className=\"events__list-item\">\n          <div className=\"sp\">\n            <div>\n              <h1>{booking.event.marca}</h1>\n              <h2>Clasa : {booking.event.clasa}</h2>\n              <h2>Numar Kilometri : {booking.event.numarKilometri} km</h2>\n              <h2>\n                {/* Price/hour: ${props.price} - {new Date(props.date).toDateString()} */}\n                Price/hour: ${booking.event.price}/h\n              </h2>\n              <h2>\n                Booking started date :\n                <i> {new Date(booking.createdAt).toLocaleDateString()}</i>\n              </h2>\n            </div>\n            <div className=\"booking__item-actions\">\n              <button\n                className=\"btn\"\n                onClick={props.onDelete.bind(this, booking._id)}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"btn\"\n                onClick={props.onConfirm.bind(this, booking._id)}\n              >\n                Confirm\n              </button>\n            </div>\n          </div>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport default BookingList;\n","import { Token } from \"graphql\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport Spinner from \"../components/Spiner/Spinner\";\nimport Modal from \"../components/Modal/Modal\";\nimport Backdrop from \"../components/Backdrop/Backdrop\";\nimport BookingList from \"../components/Bookings/BookingList/BookingList\";\n\nconst BookingPage = () => {\n  const [bookings, setBookings] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [confirmBooking, setConfirmBooking] = useState(false);\n  const [selectedBooking, setSelectedBooking] = useState();\n  const [badUser, setBadUser] = useState();\n\n  const context = useContext(AuthContext);\n\n  useEffect(() => {\n    fetchBookings();\n  }, []);\n  {\n    console.log(bookings);\n  }\n  const fetchBookings = () => {\n    setIsLoading(true);\n    const requestBody = {\n      query: `\n      query { \n        bookings{\n          _id\n          createdAt\n          user{\n            _id\n          }\n          event{\n              _id\n              date,\n              description,\n              numarInmatriculare,\n              numarKilometri,\n              marca,\n              detaliiMarca,\n              clasa,\n              price,\n              urlImage,\n          }\n        }\n      }\n    `,\n    };\n    const token = context.token;\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        // console.log(resData);\n        const fetchedBookings = resData.data.bookings;\n\n        setBookings(fetchedBookings);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  };\n\n  //add user to Black List\n{console.log(selectedBooking)}\n  const addToBlackList = () => {\n    const requestBody = {\n      query: `\n    mutation { \n      addToBlackList(userId : \"${badUser}\"){\n        _id\n      }\n    }\n  `,\n    };\n    const token = context.token;\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        console.log(resData);\n        deleteBookingHandler(selectedBooking);\n      })\n\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  };\n\n  const confirmHandler = async (bookingId) => {\n    setConfirmBooking(true);\n\n    \n    console.log(selectedBooking);\n    addToBlackList();\n\n    // deleteBookingHandler(bookingId);\n    setConfirmBooking(false);\n  };\n\n  const deleteBookingHandler = (bookingId) => {\n    setConfirmBooking(false);\n    setIsLoading(true);\n    const requestBody = {\n      query: `\n      mutation CancelBooking($id : ID!) { \n        cancelBooking(bookingId :$id){\n          _id\n          numarInmatriculare\n        }\n      }\n    `,\n      variables: {\n        id: bookingId,\n      },\n    };\n    const token = context.token;\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        // console.log(resData);\n        // const fetchedBookings = resData.data.bookings;\n        setIsLoading(true);\n        const updatedBookings = bookings.filter((booking) => {\n          return booking._id !== bookingId;\n        });\n        setBookings(updatedBookings);\n\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  };\n  //open Modal\n  const onShowModal = (bookingId) => {\n    setConfirmBooking(true);\n    const updatedBookings = bookings.filter((booking) => {\n      return booking._id === bookingId;\n    });\n    setSelectedBooking(updatedBookings[0]._id);\n    setBadUser(updatedBookings[0].user._id);\n  };\n\n  return (\n    <React.Fragment>\n      {confirmBooking && <Backdrop />}\n      {confirmBooking && selectedBooking && (\n        <Modal\n          buttonTitle=\"Add to Black List\"\n          title=\"Add to Black List\"\n          canCancel\n          canConfirm\n          onCancel={() => deleteBookingHandler(selectedBooking)}\n          onConfirm={() => confirmHandler(selectedBooking._id)}\n          //  onCancel={modalCancelHandler}\n          //  onConfirm={bookEventHandler}\n        >\n          {/* <h1>{selectedEvent.clasa}</h1>\n         <h2>${selectedEvent.price}</h2>\n         <h2>{new Date(selectedEvent.date).toDateString()}</h2>\n         <p>{selectedEvent.description}</p> */}\n          <div>\n            <h1 style={{ textAlign: \"center\" }}>Confirm Booking</h1>\n            <h2>Do you want to add this user to Black List?</h2>\n          </div>\n        </Modal>\n      )}\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <BookingList\n          bookings={bookings}\n          onDelete={deleteBookingHandler}\n          onConfirm={onShowModal}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default BookingPage;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./MainNavigation.css\";\nimport AuthContext from \"../../context/auth-context\";\n\nconst MainNavigation = (props) => {\n  const context = useContext(AuthContext);\n\n  return (\n    <header className=\"main-navigation\">\n      <div className=\"main-navigation__logo\">\n        <h1>Booking</h1>\n      </div>\n      <div className=\"main-navigation__items\">\n        <ul>\n          <li>\n            <NavLink to=\"/cars\">Cars</NavLink>\n          </li>\n          {!context.token && (\n            <li>\n              <NavLink to=\"/auth\">Authenticate</NavLink>\n            </li>\n          )}\n          {context.token && (\n            <React.Fragment>\n              <li>\n                <NavLink to=\"/bookings\">Bookings</NavLink>\n              </li>\n              <li>\n                <button onClick={context.logout}> Logout</button>\n              </li>\n            </React.Fragment>\n          )}\n        </ul>\n      </div>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useState, useContext } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport AuthPage from \"./pages/Auth\";\nimport EventPage from \"./pages/Events\";\nimport BookingPage from \"./pages/Booking\";\n\nimport MainNavigation from \"./components/navigation/MainNavigation\";\nimport AuthContext from \"./context/auth-context\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [values, setValues] = useState({\n    token: null,\n    userId: null,\n    isAdmin: null,\n  });\n  console.log(values);\n  const login = (token, userId, tokenExpiration, isAdmin) => {\n    setValues({ token: token, userId: userId, isAdmin: isAdmin });\n  };\n  const logout = () => {\n    setValues({ token: null, userId: null, isAdmin: null });\n  };\n\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <AuthContext.Provider\n          value={{\n            token: values.token,\n            userId: values.userId,\n            isAdmin: values.isAdmin,\n            login: login,\n            logout: logout,\n          }}\n        >\n          <MainNavigation />\n          <main className=\"main-content\">\n            <Switch>\n              {values.token && <Redirect from=\"/\" to=\"/cars\" exact />}\n              {values.token && <Redirect from=\"/auth\" to=\"/cars\" exact />}\n\n              {!values.token && (\n                <Route path=\"/auth\" component={AuthPage} exact />\n              )}\n              <Route path=\"/cars\" component={EventPage} exact />\n              {!values.token && <Redirect to=\"/auth\" exact />}\n              {values.token && (\n                <Route path=\"/bookings\" component={BookingPage} exact />\n              )}\n            </Switch>\n          </main>\n        </AuthContext.Provider>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}